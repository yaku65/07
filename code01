package pr1.a07;


import schimkat.berlin.lernhilfe2021ws.graphics.Drawable;
import java.awt.Graphics;
import java.awt.Color;

public class FirstGraphics implements Drawable {
	 
	
	public void draw(Graphics g) {
		
		g.setColor(Color.BLACK);	
		g.fillRect(100, 0, 100, 100);
			
		}

	}
  
  
  
  /////////////  
  /////////////  
  /////////////
  
  
  package pr1.a07;

import schimkat.berlin.lernhilfe2021ws.graphics.DirtyPainter;
import schimkat.berlin.lernhilfe2021ws.graphics.Point;

import java.awt.Color;


public class TestGraphics {
    public static void main(String[] args) {
        
    	DirtyPainter painter = new DirtyPainter();
        DirtyPainter painter2 = new DirtyPainter();
       
        Gitter gitter00 = new Gitter();
        Gitter gitter01 = new Gitter(gitter00);
        Gitter gitter02 = new Gitter(Color.BLUE, 25, 25);
       
        
        Point line00 = new Point(new Point(100, 100));
        Point line01 = new Point(line00);
        Point line02 = new Point(30, 30);
     
        painter.add(line00);
        painter.add(line01);
        painter.add(line02);
       
        painter2.add(gitter01);
        painter2.add(gitter02);
        painter2.add(gitter00);
       
        painter2.showDrawing();
        painter.showDrawing();
    }
}

  /////////////  
  /////////////  
  /////////////  
  /////////////  
  /////////////
  
  package pr1.a07;

import java.awt.Color;
import schimkat.berlin.lernhilfe2021ws.graphics.DirtyPainter;


public class Test {

	public static void main(String[] args) {
		
		DirtyPainter painter = new DirtyPainter();
		DirtyPainter painter2 = new DirtyPainter();
		
		Gitter Test = new Gitter(Color.RED,100,100);
		painter.add(Test);
		
		painter.add(new FirstGraphics());
		painter2.add(Test);
		
		painter.showDrawing();
		painter2.showDrawing();

	}

}

 /////////////  
  /////////////  
  /////////////  
  /////////////  
  /////////////
  
  package pr1.a07;

import schimkat.berlin.lernhilfe2021ws.graphics.Drawable;

import java.awt.*;
import java.awt.Color;

public class Gitter implements Drawable {
	
	public static void main(String[] args) {
		
	}
	
    protected Color c;
    protected int dx;
    protected int dy;
    protected final int maxX = 1000;
    protected final int maxY = 1000;

    public Gitter(Color c, int dx, int dy) {
        this.c = c;
        this.dx = dx;
        this.dy = dy;
    }

    public Gitter(Gitter zwei) {
        this(zwei.c, zwei.dx, zwei.dy);
    }
    
    public Gitter(int dx, int dy) {
        c = Color.YELLOW;
        this.dx = dx;
        this.dy = dy;
    }

    public Gitter() {
        c = Color.BLUE;
        dx = 100;
        dy = 100;
    }

    public void setC(Color c) {
        this.c = c;
    }

    public Color getC() {
        return c;
    }

    public int getDx() {
        return dx;
    }

    public int getDy() {
        return dy;
    }

 
    public void draw(Graphics g) {
        g.setColor(c);
        for(int x = 0; x <= maxX; x += getDx()) {
            for(int y = 0; y <= maxY; y += getDy()) {
                g.drawLine(0, y, 1000, y);
            }
            g.drawLine(x, 0, x, 1000);
        }
    }
}
